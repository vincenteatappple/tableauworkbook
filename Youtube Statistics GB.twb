<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='GBvideos (GBvideos)' inline='true' name='federated.1v60ick0psrnhw17yg10q1y30sl6' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GBvideos' name='excel-direct.1upg0x20et2xfx1g1e3lx0s8q7x1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vincent/Desktop/Example workbook/Youtube Statistics/GBvideos.csv/GBvideos.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1upg0x20et2xfx1g1e3lx0s8q7x1' name='GBvideos' table='[GBvideos$]' type='table'>
          <columns gridOrigin='A1:P16384:no:A1:P16384:0' header='yes' outcome='2'>
            <column datatype='string' name='video_id' ordinal='0' />
            <column datatype='string' name='trending_date' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='channel_title' ordinal='3' />
            <column datatype='integer' name='category_id' ordinal='4' />
            <column datatype='string' name='publish_time' ordinal='5' />
            <column datatype='string' name='tags' ordinal='6' />
            <column datatype='integer' name='views' ordinal='7' />
            <column datatype='integer' name='likes' ordinal='8' />
            <column datatype='integer' name='dislikes' ordinal='9' />
            <column datatype='integer' name='comment_count' ordinal='10' />
            <column datatype='string' name='thumbnail_link' ordinal='11' />
            <column datatype='boolean' name='comments_disabled' ordinal='12' />
            <column datatype='boolean' name='ratings_disabled' ordinal='13' />
            <column datatype='boolean' name='video_error_or_removed' ordinal='14' />
            <column datatype='string' name='description' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>video_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[video_id]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>video_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trending_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[trending_date]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>trending_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>channel_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[channel_title]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>channel_title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>publish_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[publish_time]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>publish_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>views</remote-name>
            <remote-type>20</remote-type>
            <local-name>[views]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>views</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>likes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[likes]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>likes</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dislikes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dislikes]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>dislikes</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comment_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[comment_count]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>comment_count</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thumbnail_link</remote-name>
            <remote-type>130</remote-type>
            <local-name>[thumbnail_link]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>thumbnail_link</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comments_disabled</remote-name>
            <remote-type>11</remote-type>
            <local-name>[comments_disabled]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>comments_disabled</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratings_disabled</remote-name>
            <remote-type>11</remote-type>
            <local-name>[ratings_disabled]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>ratings_disabled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>video_error_or_removed</remote-name>
            <remote-type>11</remote-type>
            <local-name>[video_error_or_removed]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>video_error_or_removed</remote-alias>
            <ordinal>14</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P16384:no:A1:P16384:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' hidden='true' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([views]) / TOTAL(SUM([views]))'>
          <table-calc ordering-type='Table' />
        </calculation>
      </column>
      <column caption='Percentage of Likes and Dislikes' datatype='real' name='[Calculation_853713638442602497]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dislikes])/SUM([dislikes]+[likes])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
      <column caption='Comment Count' datatype='integer' name='[comment_count]' role='measure' type='quantitative' />
      <column caption='Comments Disabled' datatype='boolean' name='[comments_disabled]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' hidden='true' name='[description]' role='dimension' type='nominal' />
      <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
      <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
      <column caption='Publish Year' datatype='string' name='[publish_time - Split 1 - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time - Split 1]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [publish_time - Split 1], &quot;-&quot;, 1 ) )' />
      </column>
      <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
      </column>
      <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
      <column caption='Ratings Disabled' datatype='boolean' name='[ratings_disabled]' role='dimension' type='nominal' />
      <column caption='Tags' datatype='string' hidden='true' name='[tags]' role='dimension' type='nominal' />
      <column caption='Thumbnail Link' datatype='string' hidden='true' name='[thumbnail_link]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Trending Date' datatype='string' name='[trending_date]' role='dimension' type='nominal' />
      <column caption='Video Error Or Removed' datatype='boolean' name='[video_error_or_removed]' role='dimension' type='nominal' />
      <column caption='Video Id' datatype='string' hidden='true' name='[video_id]' role='dimension' type='nominal' />
      <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
      <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.637744' measure-ordering='alphabetic' measure-percentage='0.362256' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category_id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>28</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#79706e'>
              <bucket>27</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>25</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>26</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>24</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>17</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>29</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>20</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>22</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hong Kong&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='GB_category_id' inline='true' name='federated.0qqgh0r15n981u11nxjg91no77l1' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GB_category_id' name='semistructpassivestore-direct.1dh2k5p0j52roe1apg84y016rcw2'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Vincent/Desktop/Example workbook/Youtube Statistics' filename='GB_category_id.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[GB_category_id.json]'>
                  <map key='items' value='true' />
                  <map key='items.Value' value='true' />
                  <map key='items.Value.snippet' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1dh2k5p0j52roe1apg84y016rcw2' name='GB_category_id.json' table='[GB_category_id.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[GB_category_id.json].[Document Index (generated)]' />
          <map key='[assignable]' value='[GB_category_id.json].[items.Value.snippet.assignable]' />
          <map key='[channelId]' value='[GB_category_id.json].[items.Value.snippet.channelId]' />
          <map key='[etag (items)]' value='[GB_category_id.json].[items.Value.etag]' />
          <map key='[etag]' value='[GB_category_id.json].[etag]' />
          <map key='[id]' value='[GB_category_id.json].[items.Value.id]' />
          <map key='[items Index (generated)]' value='[GB_category_id.json].[items.Index (generated)]' />
          <map key='[kind (items)]' value='[GB_category_id.json].[items.Value.kind]' />
          <map key='[kind]' value='[GB_category_id.json].[kind]' />
          <map key='[title]' value='[GB_category_id.json].[items.Value.snippet.title]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>etag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[etag]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>etag</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[items Index (generated)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.etag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[etag (items)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.etag</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.kind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[kind (items)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.kind</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.assignable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[assignable]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.assignable</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.channelId</remote-name>
            <remote-type>130</remote-type>
            <local-name>[channelId]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.channelId</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.title</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[kind]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>kind</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' hidden='true' is-auto-gen-lod-field='true' name='[Number of Records per GB_category_id.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at GB_category_id.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' hidden='true' is-auto-gen-lod-field='true' name='[Number of Records per items]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([items Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at items level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Assignable' datatype='boolean' name='[assignable]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.assignable</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Channel Id' datatype='string' hidden='true' name='[channelId]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.channelId</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Etag (Items)' datatype='string' hidden='true' name='[etag (items)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.etag</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Etag' datatype='string' hidden='true' name='[etag]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>etag</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[items Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>items.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Kind (Items)' datatype='string' hidden='true' name='[kind (items)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.kind</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Kind' datatype='string' hidden='true' name='[kind]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>kind</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.title</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='GB category id' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[etag]' type='field' />
        <folder-item name='[kind]' type='field' />
      </folder>
      <folder name='Items' role='dimensions'>
        <folder-item name='[etag (items)]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[items Index (generated)]' type='field' />
        <folder-item name='[kind (items)]' type='field' />
      </folder>
      <folder name='Snippet' role='dimensions'>
        <folder-item name='[assignable]' type='field' />
        <folder-item name='[channelId]' type='field' />
        <folder-item name='[title]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.613883' measure-ordering='alphabetic' measure-percentage='0.386117' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hong Kong&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.id</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[id]' derivation='None' name='[none:id:nk]' pivot='key' type='nominal' />
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.title</run>
          </formatted-text>
        </desc>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0qqgh0r15n981u11nxjg91no77l1' target='federated.1v60ick0psrnhw17yg10q1y30sl6'>
      <column-mapping>
        <map key='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]' value='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
        <map key='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' value='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Channel counts by Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
            <column-instance column='[channel_title]' derivation='Count' name='[cnt:channel_title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Autos &amp; Vehicles&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Comedy&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Entertainment&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Film &amp; Animation&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Gaming&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Howto &amp; Style&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Music&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;News &amp; Politics&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;People &amp; Blogs&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Pets &amp; Animals&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Science &amp; Technology&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Sports&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Travel &amp; Events&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Music&quot;</bucket>
              <bucket>&quot;Entertainment&quot;</bucket>
              <bucket>&quot;People &amp; Blogs&quot;</bucket>
              <bucket>&quot;Howto &amp; Style&quot;</bucket>
              <bucket>&quot;Sports&quot;</bucket>
              <bucket>&quot;Gaming&quot;</bucket>
              <bucket>&quot;Comedy&quot;</bucket>
              <bucket>&quot;Film &amp; Animation&quot;</bucket>
              <bucket>&quot;News &amp; Politics&quot;</bucket>
              <bucket>&quot;Science &amp; Technology&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Pets &amp; Animals&quot;</bucket>
              <bucket>&quot;Autos &amp; Vehicles&quot;</bucket>
              <bucket>&quot;Travel &amp; Events&quot;</bucket>
              <bucket>&quot;Action/Adventure&quot;</bucket>
              <bucket>&quot;Anime/Animation&quot;</bucket>
              <bucket>&quot;Classics&quot;</bucket>
              <bucket>&quot;Documentary&quot;</bucket>
              <bucket>&quot;Drama&quot;</bucket>
              <bucket>&quot;Family&quot;</bucket>
              <bucket>&quot;Foreign&quot;</bucket>
              <bucket>&quot;Horror&quot;</bucket>
              <bucket>&quot;Movies&quot;</bucket>
              <bucket>&quot;Sci-Fi/Fantasy&quot;</bucket>
              <bucket>&quot;Short Movies&quot;</bucket>
              <bucket>&quot;Shorts&quot;</bucket>
              <bucket>&quot;Shows&quot;</bucket>
              <bucket>&quot;Thriller&quot;</bucket>
              <bucket>&quot;Trailers&quot;</bucket>
              <bucket>&quot;Videoblogging&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]'>
            <groupfilter from='1' function='range' level='[none:category_id:ok]' to='28' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</column>
            <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v60ick0psrnhw17yg10q1y30sl6].[cnt:channel_title:qk]</rows>
        <cols>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</cols>
        <join-lod-include-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[category_id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Measures by Category'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>##&#10;Conclusion: Videos in Music and Entertainment categories gain the most exposure to users on Youtube.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Comment Count' datatype='integer' name='[comment_count]' role='measure' type='quantitative' />
            <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[comment_count]' derivation='Sum' name='[sum:comment_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dislikes]' derivation='Sum' name='[sum:dislikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:title:nk]' />
              <groupfilter function='member' level='[none:title:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' direction='DESC' using='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f6eee3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:comment_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:comment_count:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk])))</rows>
        <cols>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</cols>
        <join-lod-exclude-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Percentage of Dislikes in Likes'>
      <table>
        <view>
          <datasources>
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Percentage of Likes and Dislikes' datatype='real' name='[Calculation_853713638442602497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dislikes])/SUM([dislikes]+[likes])' />
            </column>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[dislikes]' derivation='Sum' name='[sum:dislikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_853713638442602497]' derivation='User' name='[usr:Calculation_853713638442602497:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Autos &amp; Vehicles&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Comedy&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Entertainment&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Film &amp; Animation&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Gaming&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Howto &amp; Style&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Music&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;News &amp; Politics&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;People &amp; Blogs&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Pets &amp; Animals&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Science &amp; Technology&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Sports&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Travel &amp; Events&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Entertainment&quot;</bucket>
              <bucket>&quot;News &amp; Politics&quot;</bucket>
              <bucket>&quot;People &amp; Blogs&quot;</bucket>
              <bucket>&quot;Film &amp; Animation&quot;</bucket>
              <bucket>&quot;Gaming&quot;</bucket>
              <bucket>&quot;Travel &amp; Events&quot;</bucket>
              <bucket>&quot;Sports&quot;</bucket>
              <bucket>&quot;Science &amp; Technology&quot;</bucket>
              <bucket>&quot;Music&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Comedy&quot;</bucket>
              <bucket>&quot;Howto &amp; Style&quot;</bucket>
              <bucket>&quot;Autos &amp; Vehicles&quot;</bucket>
              <bucket>&quot;Pets &amp; Animals&quot;</bucket>
              <bucket>&quot;Videoblogging&quot;</bucket>
              <bucket>&quot;Trailers&quot;</bucket>
              <bucket>&quot;Thriller&quot;</bucket>
              <bucket>&quot;Shows&quot;</bucket>
              <bucket>&quot;Shorts&quot;</bucket>
              <bucket>&quot;Short Movies&quot;</bucket>
              <bucket>&quot;Sci-Fi/Fantasy&quot;</bucket>
              <bucket>&quot;Movies&quot;</bucket>
              <bucket>&quot;Horror&quot;</bucket>
              <bucket>&quot;Foreign&quot;</bucket>
              <bucket>&quot;Family&quot;</bucket>
              <bucket>&quot;Drama&quot;</bucket>
              <bucket>&quot;Documentary&quot;</bucket>
              <bucket>&quot;Classics&quot;</bucket>
              <bucket>&quot;Anime/Animation&quot;</bucket>
              <bucket>&quot;Action/Adventure&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]' value='p0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e799b3' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#fabfd2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</rows>
        <cols>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]))</cols>
        <join-lod-include-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[category_id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[title]</column>
        </join-lod-exclude-overrides>
        <percentages enabled='false' mode='column' />
      </table>
    </worksheet>
    <worksheet name='Top 20 videos (view)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.id</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column-instance column='[channel_title]' derivation='Attribute' name='[attr:channel_title:nk]' pivot='key' type='nominal' />
            <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
            <column-instance column='[publish_time - Split 1]' derivation='None' name='[none:publish_time - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
            </column>
            <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:channel_title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;YouTube Spotlight&quot;</bucket>
              <bucket>&quot;Ed Sheeran&quot;</bucket>
              <bucket>&quot;Marvel Entertainment&quot;</bucket>
              <bucket>&quot;Logan Paul Vlogs&quot;</bucket>
              <bucket>&quot;GEazyMusicVEVO&quot;</bucket>
              <bucket>&quot;Ozuna&quot;</bucket>
              <bucket>&quot;Bruno Mars&quot;</bucket>
              <bucket>&quot;TaylorSwiftVEVO&quot;</bucket>
              <bucket>&quot;PostMaloneVEVO&quot;</bucket>
              <bucket>&quot;Daddy Yankee&quot;</bucket>
              <bucket>&quot;jypentertainment&quot;</bucket>
              <bucket>&quot;ibighit&quot;</bucket>
              <bucket>&quot;jbalvinVEVO&quot;</bucket>
              <bucket>&quot;Pina Records&quot;</bucket>
              <bucket>&quot;EminemVEVO&quot;</bucket>
              <bucket>&quot;EnriqueIglesiasVEVO&quot;</bucket>
              <bucket>&quot;Universal Pictures&quot;</bucket>
              <bucket>&quot;Lele Pons&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2017-12-06T17:58:51&quot;</bucket>
              <bucket>&quot;2017-11-29T13:26:24&quot;</bucket>
              <bucket>&quot;2017-11-09T11:04:14&quot;</bucket>
              <bucket>&quot;2017-12-19T20:00:05&quot;</bucket>
              <bucket>&quot;2017-12-19T19:00:31&quot;</bucket>
              <bucket>&quot;2018-01-04T04:49:43&quot;</bucket>
              <bucket>&quot;2018-01-12T05:00:01&quot;</bucket>
              <bucket>&quot;2017-12-01T00:54:56&quot;</bucket>
              <bucket>&quot;2017-11-22T05:00:01&quot;</bucket>
              <bucket>&quot;2018-01-02T16:42:21&quot;</bucket>
              <bucket>&quot;2018-01-18T22:32:49&quot;</bucket>
              <bucket>&quot;2017-12-11T08:59:59&quot;</bucket>
              <bucket>&quot;2017-11-24T09:00:02&quot;</bucket>
              <bucket>&quot;2018-01-19T05:00:01&quot;</bucket>
              <bucket>&quot;2018-01-11T21:01:26&quot;</bucket>
              <bucket>&quot;2017-11-10T17:00:03&quot;</bucket>
              <bucket>&quot;2017-12-10T21:32:44&quot;</bucket>
              <bucket>&quot;2018-01-12T08:00:02&quot;</bucket>
              <bucket>&quot;2017-12-08T01:44:25&quot;</bucket>
              <bucket>&quot;2017-12-14T18:30:08&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Anitta &amp; J Balvin - Downtown (Official Lyric Video) ft. Lele Pons &amp; Juanpa Zurita&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Bruno Mars - Finesse (Remix) [Feat. Cardi B] [Official Video]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;BTS (ë°©íìëë¨) &apos;MIC Drop (Steve Aoki Remix)&apos; Official MV&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Dura - Daddy Yankee (Video Oficial)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ed Sheeran - Perfect (Official Music Video)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ed Sheeran - Perfect Duet (with BeyoncÃ©) [Official Audio]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Eminem - Walk On Water (Audio) ft. BeyoncÃ©&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Enrique Iglesias - EL BAÃO ft. Bad Bunny&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;G-Eazy - No Limit REMIX ft. A$AP Rocky, Cardi B, French Montana, Juicy J, Belly&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;J. Balvin, Jeon, Anitta - Machika&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Jurassic World: Fallen Kingdom - Official Trailer [HD]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Logan Paul - SANTA DISS TRACK (Official Music Video)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Marvel Studios&apos; Avengers: Infinity War Official Trailer&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Natti Natasha â  Bad Bunny - Amantes de Una Noche ð©ð» ð¹ð°  [Official Video]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ozuna - La Modelo Ft Cardi B ( Video Oficial )&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Post Malone - rockstar ft. 21 Savage&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;So Sorry.&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Taylor Swift - End Game ft. Ed Sheeran, Future&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;TWICE Heart Shaker M/V&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;YouTube Rewind: The Shape of 2017 | \#YouTubeRewind&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Anitta &amp; J Balvin - Downtown (Official Lyric Video) ft. Lele Pons &amp; Juanpa Zurita&quot;</bucket>
              <bucket>&quot;Jurassic World: Fallen Kingdom - Official Trailer [HD]&quot;</bucket>
              <bucket>&quot;Enrique Iglesias - EL BAÃO ft. Bad Bunny&quot;</bucket>
              <bucket>&quot;Logan Paul - SANTA DISS TRACK (Official Music Video)&quot;</bucket>
              <bucket>&quot;Eminem - Walk On Water (Audio) ft. BeyoncÃ©&quot;</bucket>
              <bucket>&quot;Natti Natasha â  Bad Bunny - Amantes de Una Noche ð©ð» ð¹ð°  [Official Video]&quot;</bucket>
              <bucket>&quot;J. Balvin, Jeon, Anitta - Machika&quot;</bucket>
              <bucket>&quot;BTS (ë°©íìëë¨) &apos;MIC Drop (Steve Aoki Remix)&apos; Official MV&quot;</bucket>
              <bucket>&quot;TWICE Heart Shaker M/V&quot;</bucket>
              <bucket>&quot;Dura - Daddy Yankee (Video Oficial)&quot;</bucket>
              <bucket>&quot;So Sorry.&quot;</bucket>
              <bucket>&quot;Post Malone - rockstar ft. 21 Savage&quot;</bucket>
              <bucket>&quot;Ed Sheeran - Perfect Duet (with BeyoncÃ©) [Official Audio]&quot;</bucket>
              <bucket>&quot;Taylor Swift - End Game ft. Ed Sheeran, Future&quot;</bucket>
              <bucket>&quot;Bruno Mars - Finesse (Remix) [Feat. Cardi B] [Official Video]&quot;</bucket>
              <bucket>&quot;Ozuna - La Modelo Ft Cardi B ( Video Oficial )&quot;</bucket>
              <bucket>&quot;G-Eazy - No Limit REMIX ft. A$AP Rocky, Cardi B, French Montana, Juicy J, Belly&quot;</bucket>
              <bucket>&quot;Ed Sheeran - Perfect (Official Music Video)&quot;</bucket>
              <bucket>&quot;Marvel Studios&apos; Avengers: Infinity War Official Trailer&quot;</bucket>
              <bucket>&quot;YouTube Rewind: The Shape of 2017 | \#YouTubeRewind&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='99' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:channel_title:nk] / ([federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk] / ([federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk] / [federated.0qqgh0r15n981u11nxjg91no77l1].[attr:title:nk])))</rows>
        <cols />
        <join-lod-include-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Views and Likes across Publish Year'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Sum of Likes for each Publish Time.&#10;#Conclusion: Videos published at 17:58  06-12-17 has the most likes </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[publish_time - Split 1 - Split 1]' derivation='None' name='[none:publish_time - Split 1 - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='Publish Year' datatype='string' name='[publish_time - Split 1 - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time - Split 1]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time - Split 1], &quot;-&quot;, 1 ) )' />
            </column>
            <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
            </column>
            <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</rows>
        <cols>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Measures by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:kind:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[:Measure Names]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Views and Likes across Publish Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 20 videos (view)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:channel_title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:trending_date:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[pcto:sum:views:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Channel counts by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:comments_disabled:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:channel_title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:comments_disabled:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:ratings_disabled:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Percentage of Dislikes in Likes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:ratings_disabled:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Channel counts by Category' width='192'>
      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
      w9/xO77vrAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Measures by Category' width='192'>
      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
      zuMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage of Dislikes in Likes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 20 videos (view)' width='192'>
      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
      y4L/F6szW7e1RpX8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Views and Likes across Publish Year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
