<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0615.1128                               -->
<workbook original-version='10.5' source-build='10.5.5 (10500.18.0615.1128)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='GBvideos (GBvideos)' inline='true' name='federated.1v60ick0psrnhw17yg10q1y30sl6' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GBvideos' name='excel-direct.1upg0x20et2xfx1g1e3lx0s8q7x1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/vincc/Desktop/Example workbook/Youtube Statistics/GBvideos.csv/GBvideos.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1upg0x20et2xfx1g1e3lx0s8q7x1' name='GBvideos' table='[GBvideos$]' type='table'>
          <columns gridOrigin='A1:P16384:no:A1:P16384:0' header='yes' outcome='2'>
            <column datatype='string' name='video_id' ordinal='0' />
            <column datatype='string' name='trending_date' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='channel_title' ordinal='3' />
            <column datatype='integer' name='category_id' ordinal='4' />
            <column datatype='string' name='publish_time' ordinal='5' />
            <column datatype='string' name='tags' ordinal='6' />
            <column datatype='integer' name='views' ordinal='7' />
            <column datatype='integer' name='likes' ordinal='8' />
            <column datatype='integer' name='dislikes' ordinal='9' />
            <column datatype='integer' name='comment_count' ordinal='10' />
            <column datatype='string' name='thumbnail_link' ordinal='11' />
            <column datatype='boolean' name='comments_disabled' ordinal='12' />
            <column datatype='boolean' name='ratings_disabled' ordinal='13' />
            <column datatype='boolean' name='video_error_or_removed' ordinal='14' />
            <column datatype='string' name='description' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>video_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[video_id]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>video_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trending_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[trending_date]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>trending_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>channel_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[channel_title]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>channel_title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>publish_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[publish_time]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>publish_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>views</remote-name>
            <remote-type>20</remote-type>
            <local-name>[views]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>views</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>likes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[likes]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>likes</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dislikes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dislikes]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>dislikes</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comment_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[comment_count]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>comment_count</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thumbnail_link</remote-name>
            <remote-type>130</remote-type>
            <local-name>[thumbnail_link]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>thumbnail_link</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comments_disabled</remote-name>
            <remote-type>11</remote-type>
            <local-name>[comments_disabled]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>comments_disabled</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratings_disabled</remote-name>
            <remote-type>11</remote-type>
            <local-name>[ratings_disabled]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>ratings_disabled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>video_error_or_removed</remote-name>
            <remote-type>11</remote-type>
            <local-name>[video_error_or_removed]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>video_error_or_removed</remote-alias>
            <ordinal>14</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P16384:no:A1:P16384:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' hidden='true' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([views]) / TOTAL(SUM([views]))'>
          <table-calc ordering-type='Table' />
        </calculation>
      </column>
      <column caption='Percentage of Likes and Dislikes' datatype='real' name='[Calculation_853713638442602497]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dislikes])/SUM([dislikes]+[likes])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
      <column caption='Comment Count' datatype='integer' name='[comment_count]' role='measure' type='quantitative' />
      <column caption='Comments Disabled' datatype='boolean' name='[comments_disabled]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' hidden='true' name='[description]' role='dimension' type='nominal' />
      <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
      <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
      <column caption='Publish Year' datatype='string' name='[publish_time - Split 1 - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time - Split 1]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [publish_time - Split 1], &quot;-&quot;, 1 ) )' />
      </column>
      <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
      </column>
      <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
      <column caption='Ratings Disabled' datatype='boolean' name='[ratings_disabled]' role='dimension' type='nominal' />
      <column caption='Tags' datatype='string' hidden='true' name='[tags]' role='dimension' type='nominal' />
      <column caption='Thumbnail Link' datatype='string' hidden='true' name='[thumbnail_link]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Trending Date' datatype='string' name='[trending_date]' role='dimension' type='nominal' />
      <column caption='Video Error Or Removed' datatype='boolean' name='[video_error_or_removed]' role='dimension' type='nominal' />
      <column caption='Video Id' datatype='string' hidden='true' name='[video_id]' role='dimension' type='nominal' />
      <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
      <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.639321' measure-ordering='alphabetic' measure-percentage='0.360679' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category_id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>28</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#79706e'>
              <bucket>27</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>25</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>26</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>24</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>17</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>29</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>20</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>22</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hong Kong&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='GB_category_id' inline='true' name='federated.0qqgh0r15n981u11nxjg91no77l1' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GB_category_id' name='semistructpassivestore-direct.1dh2k5p0j52roe1apg84y016rcw2'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/vincc/Desktop/Example workbook/Youtube Statistics' filename='GB_category_id.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[GB_category_id.json]'>
                  <map key='items' value='true' />
                  <map key='items.Value' value='true' />
                  <map key='items.Value.snippet' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1dh2k5p0j52roe1apg84y016rcw2' name='GB_category_id.json' table='[GB_category_id.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[GB_category_id.json].[Document Index (generated)]' />
          <map key='[assignable]' value='[GB_category_id.json].[items.Value.snippet.assignable]' />
          <map key='[channelId]' value='[GB_category_id.json].[items.Value.snippet.channelId]' />
          <map key='[etag (items)]' value='[GB_category_id.json].[items.Value.etag]' />
          <map key='[etag]' value='[GB_category_id.json].[etag]' />
          <map key='[id]' value='[GB_category_id.json].[items.Value.id]' />
          <map key='[items Index (generated)]' value='[GB_category_id.json].[items.Index (generated)]' />
          <map key='[kind (items)]' value='[GB_category_id.json].[items.Value.kind]' />
          <map key='[kind]' value='[GB_category_id.json].[kind]' />
          <map key='[title]' value='[GB_category_id.json].[items.Value.snippet.title]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>etag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[etag]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>etag</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[items Index (generated)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.etag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[etag (items)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.etag</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.kind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[kind (items)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.kind</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.assignable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[assignable]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.assignable</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.channelId</remote-name>
            <remote-type>130</remote-type>
            <local-name>[channelId]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.channelId</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.title</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[kind]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>kind</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' hidden='true' is-auto-gen-lod-field='true' name='[Number of Records per GB_category_id.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at GB_category_id.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' hidden='true' is-auto-gen-lod-field='true' name='[Number of Records per items]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([items Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at items level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Assignable' datatype='boolean' name='[assignable]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.assignable</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Channel Id' datatype='string' hidden='true' name='[channelId]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.channelId</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Etag (Items)' datatype='string' hidden='true' name='[etag (items)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.etag</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Etag' datatype='string' hidden='true' name='[etag]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>etag</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[items Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>items.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Kind (Items)' datatype='string' hidden='true' name='[kind (items)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.kind</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Kind' datatype='string' hidden='true' name='[kind]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>kind</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.title</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <folder name='GB category id' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[etag]' type='field' />
        <folder-item name='[kind]' type='field' />
      </folder>
      <folder name='Items' role='dimensions'>
        <folder-item name='[etag (items)]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[items Index (generated)]' type='field' />
        <folder-item name='[kind (items)]' type='field' />
      </folder>
      <folder name='Snippet' role='dimensions'>
        <folder-item name='[assignable]' type='field' />
        <folder-item name='[channelId]' type='field' />
        <folder-item name='[title]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.592645' measure-ordering='alphabetic' measure-percentage='0.407355' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:title:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;News &amp; Politics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sports&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Autos &amp; Vehicles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Science &amp; Technology&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gaming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Travel &amp; Events&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Film &amp; Animation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;People &amp; Blogs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pets &amp; Animals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Howto &amp; Style&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hong Kong&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.id</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[id]' derivation='None' name='[none:id:nk]' pivot='key' type='nominal' />
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.title</run>
          </formatted-text>
        </desc>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0qqgh0r15n981u11nxjg91no77l1' target='federated.1v60ick0psrnhw17yg10q1y30sl6'>
      <column-mapping>
        <map key='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]' value='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
        <map key='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' value='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Channel counts by Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
            <column-instance column='[channel_title]' derivation='Count' name='[cnt:channel_title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Comedy&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Entertainment&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Film &amp; Animation&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Gaming&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Howto &amp; Style&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Music&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;News &amp; Politics&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;People &amp; Blogs&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Science &amp; Technology&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Sports&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Music&quot;</bucket>
              <bucket>&quot;Entertainment&quot;</bucket>
              <bucket>&quot;People &amp; Blogs&quot;</bucket>
              <bucket>&quot;Howto &amp; Style&quot;</bucket>
              <bucket>&quot;Sports&quot;</bucket>
              <bucket>&quot;Gaming&quot;</bucket>
              <bucket>&quot;Comedy&quot;</bucket>
              <bucket>&quot;Film &amp; Animation&quot;</bucket>
              <bucket>&quot;News &amp; Politics&quot;</bucket>
              <bucket>&quot;Science &amp; Technology&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Pets &amp; Animals&quot;</bucket>
              <bucket>&quot;Autos &amp; Vehicles&quot;</bucket>
              <bucket>&quot;Travel &amp; Events&quot;</bucket>
              <bucket>&quot;Action/Adventure&quot;</bucket>
              <bucket>&quot;Anime/Animation&quot;</bucket>
              <bucket>&quot;Classics&quot;</bucket>
              <bucket>&quot;Documentary&quot;</bucket>
              <bucket>&quot;Drama&quot;</bucket>
              <bucket>&quot;Family&quot;</bucket>
              <bucket>&quot;Foreign&quot;</bucket>
              <bucket>&quot;Horror&quot;</bucket>
              <bucket>&quot;Movies&quot;</bucket>
              <bucket>&quot;Sci-Fi/Fantasy&quot;</bucket>
              <bucket>&quot;Short Movies&quot;</bucket>
              <bucket>&quot;Shorts&quot;</bucket>
              <bucket>&quot;Shows&quot;</bucket>
              <bucket>&quot;Thriller&quot;</bucket>
              <bucket>&quot;Trailers&quot;</bucket>
              <bucket>&quot;Videoblogging&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:category_id:ok]' member='1' />
              <groupfilter function='member' level='[none:category_id:ok]' member='10' />
              <groupfilter function='member' level='[none:category_id:ok]' member='17' />
              <groupfilter from='20' function='range' level='[none:category_id:ok]' to='28' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</column>
            <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1v60ick0psrnhw17yg10q1y30sl6].[cnt:channel_title:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[cnt:channel_title:qk]' />
              <text column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' />
              <color column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <join-lod-include-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[category_id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Measures by Category'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>##&#10;Conclusion: Videos in Music and Entertainment categories gain the most exposure to users on Youtube.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Comment Count' datatype='integer' name='[comment_count]' role='measure' type='quantitative' />
            <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[comment_count]' derivation='Sum' name='[sum:comment_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dislikes]' derivation='Sum' name='[sum:dislikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:title:nk]' />
              <groupfilter function='member' level='[none:title:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' direction='DESC' using='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f6eee3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:comment_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:comment_count:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk])))</rows>
        <cols>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</cols>
        <join-lod-exclude-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Percentage of Dislikes in Likes'>
      <table>
        <view>
          <datasources>
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Percentage of Likes and Dislikes' datatype='real' name='[Calculation_853713638442602497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dislikes])/SUM([dislikes]+[likes])' />
            </column>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[dislikes]' derivation='Sum' name='[sum:dislikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_853713638442602497]' derivation='User' name='[usr:Calculation_853713638442602497:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Autos &amp; Vehicles&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Comedy&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Entertainment&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Film &amp; Animation&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Gaming&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Howto &amp; Style&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Music&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;News &amp; Politics&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;People &amp; Blogs&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Pets &amp; Animals&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Science &amp; Technology&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Sports&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Travel &amp; Events&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Entertainment&quot;</bucket>
              <bucket>&quot;News &amp; Politics&quot;</bucket>
              <bucket>&quot;People &amp; Blogs&quot;</bucket>
              <bucket>&quot;Film &amp; Animation&quot;</bucket>
              <bucket>&quot;Gaming&quot;</bucket>
              <bucket>&quot;Travel &amp; Events&quot;</bucket>
              <bucket>&quot;Sports&quot;</bucket>
              <bucket>&quot;Science &amp; Technology&quot;</bucket>
              <bucket>&quot;Music&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Comedy&quot;</bucket>
              <bucket>&quot;Howto &amp; Style&quot;</bucket>
              <bucket>&quot;Autos &amp; Vehicles&quot;</bucket>
              <bucket>&quot;Pets &amp; Animals&quot;</bucket>
              <bucket>&quot;Videoblogging&quot;</bucket>
              <bucket>&quot;Trailers&quot;</bucket>
              <bucket>&quot;Thriller&quot;</bucket>
              <bucket>&quot;Shows&quot;</bucket>
              <bucket>&quot;Shorts&quot;</bucket>
              <bucket>&quot;Short Movies&quot;</bucket>
              <bucket>&quot;Sci-Fi/Fantasy&quot;</bucket>
              <bucket>&quot;Movies&quot;</bucket>
              <bucket>&quot;Horror&quot;</bucket>
              <bucket>&quot;Foreign&quot;</bucket>
              <bucket>&quot;Family&quot;</bucket>
              <bucket>&quot;Drama&quot;</bucket>
              <bucket>&quot;Documentary&quot;</bucket>
              <bucket>&quot;Classics&quot;</bucket>
              <bucket>&quot;Anime/Animation&quot;</bucket>
              <bucket>&quot;Action/Adventure&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]' value='p0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e799b3' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#fabfd2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</rows>
        <cols>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]))</cols>
        <join-lod-include-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[category_id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[title]</column>
        </join-lod-exclude-overrides>
        <percentages enabled='false' mode='column' />
      </table>
    </worksheet>
    <worksheet name='Top 20 videos (view)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.id</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column-instance column='[channel_title]' derivation='Attribute' name='[attr:channel_title:nk]' pivot='key' type='nominal' />
            <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
            <column-instance column='[publish_time - Split 1]' derivation='None' name='[none:publish_time - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
            </column>
            <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:channel_title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;YouTube Spotlight&quot;</bucket>
              <bucket>&quot;Ed Sheeran&quot;</bucket>
              <bucket>&quot;Marvel Entertainment&quot;</bucket>
              <bucket>&quot;Logan Paul Vlogs&quot;</bucket>
              <bucket>&quot;GEazyMusicVEVO&quot;</bucket>
              <bucket>&quot;Ozuna&quot;</bucket>
              <bucket>&quot;Bruno Mars&quot;</bucket>
              <bucket>&quot;TaylorSwiftVEVO&quot;</bucket>
              <bucket>&quot;PostMaloneVEVO&quot;</bucket>
              <bucket>&quot;Daddy Yankee&quot;</bucket>
              <bucket>&quot;jypentertainment&quot;</bucket>
              <bucket>&quot;ibighit&quot;</bucket>
              <bucket>&quot;jbalvinVEVO&quot;</bucket>
              <bucket>&quot;Pina Records&quot;</bucket>
              <bucket>&quot;EminemVEVO&quot;</bucket>
              <bucket>&quot;EnriqueIglesiasVEVO&quot;</bucket>
              <bucket>&quot;Universal Pictures&quot;</bucket>
              <bucket>&quot;Lele Pons&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2017-12-06T17:58:51&quot;</bucket>
              <bucket>&quot;2017-11-29T13:26:24&quot;</bucket>
              <bucket>&quot;2017-11-09T11:04:14&quot;</bucket>
              <bucket>&quot;2017-12-19T20:00:05&quot;</bucket>
              <bucket>&quot;2017-12-19T19:00:31&quot;</bucket>
              <bucket>&quot;2018-01-04T04:49:43&quot;</bucket>
              <bucket>&quot;2018-01-12T05:00:01&quot;</bucket>
              <bucket>&quot;2017-12-01T00:54:56&quot;</bucket>
              <bucket>&quot;2017-11-22T05:00:01&quot;</bucket>
              <bucket>&quot;2018-01-02T16:42:21&quot;</bucket>
              <bucket>&quot;2018-01-18T22:32:49&quot;</bucket>
              <bucket>&quot;2017-12-11T08:59:59&quot;</bucket>
              <bucket>&quot;2017-11-24T09:00:02&quot;</bucket>
              <bucket>&quot;2018-01-19T05:00:01&quot;</bucket>
              <bucket>&quot;2018-01-11T21:01:26&quot;</bucket>
              <bucket>&quot;2017-11-10T17:00:03&quot;</bucket>
              <bucket>&quot;2017-12-10T21:32:44&quot;</bucket>
              <bucket>&quot;2018-01-12T08:00:02&quot;</bucket>
              <bucket>&quot;2017-12-08T01:44:25&quot;</bucket>
              <bucket>&quot;2017-12-14T18:30:08&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Anitta &amp; J Balvin - Downtown (Official Lyric Video) ft. Lele Pons &amp; Juanpa Zurita&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Bruno Mars - Finesse (Remix) [Feat. Cardi B] [Official Video]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;BTS (ë°©íìëë¨) &apos;MIC Drop (Steve Aoki Remix)&apos; Official MV&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Dura - Daddy Yankee (Video Oficial)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ed Sheeran - Perfect (Official Music Video)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ed Sheeran - Perfect Duet (with BeyoncÃ©) [Official Audio]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Eminem - Walk On Water (Audio) ft. BeyoncÃ©&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Enrique Iglesias - EL BAÃO ft. Bad Bunny&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;G-Eazy - No Limit REMIX ft. A$AP Rocky, Cardi B, French Montana, Juicy J, Belly&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;J. Balvin, Jeon, Anitta - Machika&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Jurassic World: Fallen Kingdom - Official Trailer [HD]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Logan Paul - SANTA DISS TRACK (Official Music Video)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Marvel Studios&apos; Avengers: Infinity War Official Trailer&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Natti Natasha â  Bad Bunny - Amantes de Una Noche ð©ð» ð¹ð°  [Official Video]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ozuna - La Modelo Ft Cardi B ( Video Oficial )&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Post Malone - rockstar ft. 21 Savage&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;So Sorry.&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Taylor Swift - End Game ft. Ed Sheeran, Future&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;TWICE Heart Shaker M/V&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;YouTube Rewind: The Shape of 2017 | \#YouTubeRewind&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Anitta &amp; J Balvin - Downtown (Official Lyric Video) ft. Lele Pons &amp; Juanpa Zurita&quot;</bucket>
              <bucket>&quot;Jurassic World: Fallen Kingdom - Official Trailer [HD]&quot;</bucket>
              <bucket>&quot;Enrique Iglesias - EL BAÃO ft. Bad Bunny&quot;</bucket>
              <bucket>&quot;Logan Paul - SANTA DISS TRACK (Official Music Video)&quot;</bucket>
              <bucket>&quot;Eminem - Walk On Water (Audio) ft. BeyoncÃ©&quot;</bucket>
              <bucket>&quot;Natti Natasha â  Bad Bunny - Amantes de Una Noche ð©ð» ð¹ð°  [Official Video]&quot;</bucket>
              <bucket>&quot;J. Balvin, Jeon, Anitta - Machika&quot;</bucket>
              <bucket>&quot;BTS (ë°©íìëë¨) &apos;MIC Drop (Steve Aoki Remix)&apos; Official MV&quot;</bucket>
              <bucket>&quot;TWICE Heart Shaker M/V&quot;</bucket>
              <bucket>&quot;Dura - Daddy Yankee (Video Oficial)&quot;</bucket>
              <bucket>&quot;So Sorry.&quot;</bucket>
              <bucket>&quot;Post Malone - rockstar ft. 21 Savage&quot;</bucket>
              <bucket>&quot;Ed Sheeran - Perfect Duet (with BeyoncÃ©) [Official Audio]&quot;</bucket>
              <bucket>&quot;Taylor Swift - End Game ft. Ed Sheeran, Future&quot;</bucket>
              <bucket>&quot;Bruno Mars - Finesse (Remix) [Feat. Cardi B] [Official Video]&quot;</bucket>
              <bucket>&quot;Ozuna - La Modelo Ft Cardi B ( Video Oficial )&quot;</bucket>
              <bucket>&quot;G-Eazy - No Limit REMIX ft. A$AP Rocky, Cardi B, French Montana, Juicy J, Belly&quot;</bucket>
              <bucket>&quot;Ed Sheeran - Perfect (Official Music Video)&quot;</bucket>
              <bucket>&quot;Marvel Studios&apos; Avengers: Infinity War Official Trailer&quot;</bucket>
              <bucket>&quot;YouTube Rewind: The Shape of 2017 | \#YouTubeRewind&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='99' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:channel_title:nk] / ([federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk] / ([federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk] / [federated.0qqgh0r15n981u11nxjg91no77l1].[attr:title:nk])))</rows>
        <cols />
        <join-lod-include-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Views and Likes across Publish Year'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Sum of Likes for each Publish Time.&#10;#Conclusion: Videos published at 17:58  06-12-17 has the most likes </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[publish_time - Split 1 - Split 1]' derivation='None' name='[none:publish_time - Split 1 - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='Publish Year' datatype='string' name='[publish_time - Split 1 - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time - Split 1]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time - Split 1], &quot;-&quot;, 1 ) )' />
            </column>
            <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
            </column>
            <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</rows>
        <cols>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='58'>
    <window class='worksheet' name='Measures by Category'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='120'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:kind:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[:Measure Names]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Views and Likes across Publish Year'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='120'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</field>
                  <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]</field>
                  <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;2007&quot;</value>
                <value>12995</value>
                <value>3399101</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 20 videos (view)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:channel_title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:trending_date:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[pcto:sum:views:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Channel counts by Category'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:comments_disabled:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:channel_title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:comments_disabled:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:ratings_disabled:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Percentage of Dislikes in Likes'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:ratings_disabled:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Channel counts by Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Measures by Category' width='192'>
      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
      OtJkAEhH2v8HC/a+szdNupAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage of Dislikes in Likes' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 20 videos (view)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Views and Likes across Publish Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3daXcUV57n8W9EZGbknql9QTsChIQEiH3HBlw25TZdVe5u15kzZ+al1JuZ
      qa6le1xll23MDgIJMALt+74vmUplpnKPiHkggXEZqttgAqS8n3N4gI6U+odO/OLeiPjHDckw
      DANByFLy2y5AEN4mEQAhq4kACFlNBEDIaiIAQlYTARCymgiAkNVEAISsJgIgZDURACGriQAI
      WU0EQMhqIgBCVhMBELKaCICQ1Sx//4V4PM7S0tLbqEUQTCf9/QMxmcwsicS9t1XPa4lEXDid
      x/F4PG+7lJ8kmUyiqurbLuMn2wp1/2gEAJA37cTIQJIk5E22AZIkPfu3mWzGvzX8sO4XBuBN
      SsfidLfPMTKfoqS2iINNflQJpvpmaB9cI7+2mGMNPmQM1pZD3L63gJKXw9GDBXiJ8fVX06zp
      Bhig6VaOX6yi3GP6ZghbhOl7ztRwAEdVCb85bqPz7ji9Yyq71FXa56yc/6iG8bujPPA6OeBP
      crstyMEPdpIZm+FOe5CLx/P56Nd1ABiaxp3r4zjlzXXUFN4tpo9fVQ3b2FXmQAKsqgWrxWBi
      ME79oXxcqpW6Y4Ws9q2wvBLDV5ZLgUOmeGc+rmCMyLNPMYjNLZHOycfn3HxDsPDuMH3vkWXQ
      Eik6WycIWNxsL1WJGxZ86vqRXFLtOIwMKcPAqa4PUJLFgkcxSG58hpFJ09Ubo77Ri2WTzZuF
      d4vpU6DUWpyHbbO4a0o4Xu1EkXQsmkZc27gYpaVJaDKKAcmMtv41XSOe/r7Y1YUwMZ+XElXs
      /MLrMXkEMBjtXsBbV05TjQtFkgCZimoL/d0RkmmNmc4l1O1+8n0OVuZXiaQMQlOrhPwOfAB6
      hvGhMFU7cswtXdiSTB4B0ixMRZmZHGVAXv/1e06UU1ddTNH8JF/+dR5Hno+ze+3YZRuNFVGu
      ftGP7HTSfKQUGUiGIqx5/OzJUcwtXdiSXngjLJXanDfCVleduFwn8Xq9b7uUnySRSKCq6qa7
      D5BIJLDb7W+7jJ/s+brFJRQhq/1oCqQoBdjt599GLa8tHo++7RKETeZHAZAkK5Lkfxu1vDZJ
      0t92CcImI6ZAQlYz/T5AYLKHh0/6CUaTOHIrOH36CHm2JG3XrzIaiKH6K/nF+RO4lRTjXfdp
      651Ctudw8MQpagpdTHbf40HPJCkNinY0c3L/DlSLyLHwasy/EaZb2X/6Iwp9Kv33bzAyuQx6
      Pys5+/j0/VIWO67T2r/MiZII3bMaH3/6GdpsF9e7hqg8V0t39wLHf/kbiu1prn91hbnacqpy
      nGZvhrBFmH7oLKnaSZHfiaQnCUWSeL0qk2NJ6hq2YbPYKG2qJz0yznIoRE5xJW6rjK+8kpxQ
      kBA2HA6DeDyNrqVI6QoOq+gEFV6d+XuPoRNZGON2ayflzafZUeKivVPF+fS+luJEVdJosoLd
      Ylv/mmzDaZHQsFFbW8L9m3+lLQPbdh3AZxcBEF6d6XtPeGGE1q4Z9p/9gGK/E1nScMlxgnGd
      IhWMeJCY4sYuGUQTawAY6RghQ8GemKZ1UOP8pX/Ba9HpuHGF4aVi9pRsrhtfwrvD5ClQhpGe
      fqr2HaHY5wDDwDAUquoL6LrbSTgWpePWY/L3bCc/P5/ViT7m1tJM93YTzy/Ao6gkIwtE4ml0
      LclCIIxFPA8gvIYftUK8WWs8+OYaIytrG/93svfMaepLc5jpa+N+zwxFuw9zoqEcgHhgnOs3
      76MU1nHySCNum0x0aYzW1naCSQt7jpxid3kuTzMQDAaxWCyiFcIkW6EVwuQAvFkiAObaCgEQ
      F9CFrCYCIGQ1EQAhq5l+GdTQM6xFwsRTGjaHB4/LjixBMhYmEkthc3jwutYXLdLSCVZXI2B1
      4PO4UGQJPZ0kHI6QQcHr92NTNte8WXi3mB6Aic47PJmK41JlVtcyHD5zjgpnlCtfXkfyuImE
      Mrz3q0sUWWJ03LrKREpFikep2H+G5po8Olq+Zjpux5IKYxTs5fyxXdjEOCa8ItMDUFB7kI+b
      1p8HHu+4y9x8AFY7yTtykaMVbhKzD7jycJxTNQkW1XIunduHHpniby1DNBQGmUhUc/HDJqxG
      mm+//CuLkUrKfJvvSoTwbjD92Olye1AkiCxNMLoQZ1uJj6UVK2WFdiRJQi2uQA0ssJqI4/fk
      IksSFk8OeYkYEUlBzyRJ6wZIkCPbCCdTZm+CsIW8hXMAjYWhh7T0hzl86iTbcizMIfNsKi8p
      yJKBASjy0wYhGYsEuquS7d4e/vKHf0dW7WjBOE1mb4CwpZgegIXh73i04OCfLx3d+OUaua4E
      86E0pcVWtJVZYu48PNYUw2shoAw9vsqyRWUvFgrPfMJewNDT3P72Mvn2zbc6sfDuMDkAcQY6
      hnDV7GOorw+wUFBeTuW+3Xxx9SbUljA/NErD+UvkOqKoXbe4+wSMpXG8VXuxA0NPWolbPCRD
      s2Ry68h328zdBGFLMbkVIsVk/xDLsaeLHNoo3V5Dsc/J6sIEE/OreIoqqC5efyY5vRZkaGQC
      2V1IdUUpqkViZX6MqflVFGcOtbWVqM+dxYhWCHNthVYI0Qv0DhABMJfoBRKEDSIAQlYTARCy
      mumXQbV0jImhfmaDcfK21bKjqgiLBMHpQQYnA/jKdrC7Ih8Aw9AJTA0SsZdRXegGQE+tMdTX
      SyBhpX5vI367WCRXeHWmjwBjnW3MxGyUl5cw2/+AwekQ6cAAN7+bxF+Yy+yjm/Qup9DTcQYe
      3eLmjRs8nght/LRB3/3rzCbtFHlTXL/exlparAYnvDrTR4CKxpNst9mQDAMtOENgLcr48DA1
      x9+nrtBBbV6Kr74bpfZ0Bf7KvXzgU7gVeXp1JMpswMKhi3vwWXWWZq6wHE3gEusCCa/I9BHA
      ZrOBnmGi+x4DAYUdVfmEEnaKfOtZlH3FOOMr6KqT4oLvn/ddF8agCIdt/ZWieaqTuJYxexOE
      LcT0ESCTjNDz8C5LlgpOndqJS9WRdY1nMxk9RUZ/2bxeRtdS6Bt3LtJaBnEGILwO01+RNN33
      iJBnN+8frcetWpCwUFyoMzEdRtN1opNjZIpLeHGDQy6qdZ5QdH1ZlPl4HK9N9AIJr87kESBK
      z3c9BH0r/GW0HXDQcOwYO5sO0/XFt/y/LguptIMP/rmcxMo0rXcfElicYiI1gbRQzKFTF6jb
      UUTLN5+jSBqe8oPku0UAhFdnciuETiqRJPN0DoOEVVWxKjJaOkkyraFYbahWC7qWIZlM8aw4
      SUJVHciSTiqZRDMkVFVFee4kQbRCmGsrtEKYPALI2OyOF05vFKuK0/rcdyoWHM4XlSej2h1v
      qkAhy4g7wUJWEwEQspoIgJDVTL8PkIws8+S7NkbmopTU7ufogR04ZIOxjrt8NzhPfm0zp/fX
      omCgpROMdt4j6N/Hkdo8AHQtQ2Cqj0czBh+eEE8EC6/H9BFgemQAb+1xfvvZb/DFhukZWWJt
      8gGPFrxcvPQxBYHHtI5HySRWaW+7zejkDHOhxLOfH+u8w4OucWYDQbNLF7Yg0wNQ3XSMuvJc
      JAwsVhWbFUb7QjQd241LdbL7ZDOh7mE01UPTkfc43liF8lyV5fXHOHeyGa8qZm/C6zN9L5Il
      iUwsxMNbV1mxl7Oj3E8CO76NHVpSfTiIY8gKqmrj7y+N21Q7YjVE4edi/jlAdJF7LffJ2XWU
      k9UFKFIGq5ZkTdu45aWtkdSsiH1cMIPJI4DG8JNH5DWeZW9NIYokARaqdjroaR8nkU4y8bAT
      tW77S3qBBOHnZXIrRIRrv/8PpjTbxoK2DvaeOUtDsZ3HLTcYmAvjKqzl/OmD6KsT3Lx+l2Ak
      TFizU5CXy8kLHzB643MmQgmC0QR5fi8NJ/+JvRUeQLRCmG0rtEKIZVHeASIA5hLLogjCBhEA
      IauJAAhZTQRAyGqm3wdYGuvkYecgobUUqr+M02eOUmBLcvfqFSZWEli9ZXz4i9N4LDqri5N8
      13KdePWHfNxcCsBUbyvt/VOsJTK4indy/uR+XDbxZLDwakwPgK44OXT2l+R7bQw8uMnY1DKS
      1k+08CCfXihhufsGrb2LvFdrZXRmiaKifEaev1Blz+XMhwfw2SXavv6G2XAdO/LdZm+GsEWY
      PgUqqqilwOdA0pMEV+P4vHamxlPs3F2CzWKleE8dmdEJdFcO+5sPUVXs/8HSKOU1u/A7bRjp
      NVbTEh5V3DITXp3pIwCGTnh+mJv3uqk5/B47Slw86lRxPnsbkhPVkuGlNycMjfmRDto6ptj7
      3ocUua0v+05B+C+ZHoDVuSFaexY4fP5DCr0OZEnDpcQJxDSKVCtGLEBMcb90vZ/5oXa6FmRO
      /eIX5IkVIYTXZPIUKM1IzwAVjfvJdVjIpNNoukx1fRE9dzsIhkM8vvWEwqbtWHSddCpFOp1B
      y2RIpdLoRoq+/hl279mNxyZvfG3L3MgW3gKTR4AUBhZ67nxDDwAOGk+epG7bAU5GH9Jy/RaF
      u05wtMzJWnCKu7fbWE0DBPhq0c3RsyeQNI3Wq3/b+Dwvxz46Q5l7892OF94NohfoHSB6gcwl
      eoEEYYMIgJDVRACErGb6ZdDo0iTt7Y+ZDsTILdvNiaONeJQMPfdv0T25gnfbbt4/3oQqGySi
      K/Q9ukO48Bhn6gsBg7GOOzwemCWhS5TtOsSRpipUReRYeDWm7zmBpSXK973Hb3/7L5RK8/SP
      LRGeeMBQqoxPfn2J7foI90bDZGIrdHQ8Zi0WZyWWfvbzjtwKfnHpUz779BPSo4+ZCsXM3gRh
      CzE9ABW7m6kq8iLpGmlNwulUGO1fo/FQLQ6bndrjzcR6htCcORw+8T77dpY+tyyKRHF5FU4r
      rK0sklC9+EQrhPAaTJ8CSUA8NM/DtofYKvbSWOqlo0fFbdm4BKi4sCuzGJL0wpUhUitTXLnR
      QjChsmvffnwO0QohvDrTAxAPzdDS1kVF00l2lPqRpQyqkSCSNihSgXSEhKG+dGiy5ZRz8Vef
      kYwGaLt1j7H8AnYVim5Q4dWYvizK0JMnbGs+w65tOcgby6LU1HnpvD9ALBln4F477oYdvPi4
      HmV0YIpERsfmcGMzEsSS4iV5wqszeQSIs7oSZfzq5zyR4NmyKJWHaVi+w5ef95JT2cjZag+x
      wPqyKCuxBEljgj+O+zh54SOSK0P87T9bSBkKlXUH2V2yue76Cu8W0QrxDhCtEOYSrRCCsEEE
      QMhqIgBCVjP9Muj6KYeBYbAx55WQpPWvG4aBJEnP5sLPn578YH5sGBgYgAQvuV8gCP8dpgdg
      buAB93smSKQyoOZx9vxZSuxxrn75NYsJHax5XLz0ITlWjeDUIC03rpCu+zWfHil79hnptUW+
      +c9/J1L8Af/6we638GCzsFWYvu/Yc8s5d3E/HruF4Ue3mZpZhngPlrr3+bdd+YSH79DaMcv5
      eiezYY2mhp10PX/011MMd/dQWN9ERrwlSXhNpp8D5BaW4rFbycRDzAVi5OW5mJszqKnOxaIo
      +LfXIs1MY7j8NO7ZQ4Hf+YO3xISm+5nVi2isyjO7dGELMv8k2NBZmezii6/vULzvFDWFTjTF
      yrNXfsl2bLL24mVRtAiPe5dp2rsTq5j4Cz8D06dAgYlu7o/GOf/Li3hUCxIaXluCxYhGsWpF
      jyywpvpfuCxKcmmSyfkpZv/yJ4xEgPElGW+Ri3N7K8zeDGGLMDkASYa6BymsO04ivEICBbfP
      S9WeCr6824b3QDWTj3qpPPoJcjpBcDVMOBQhFllhOWDHW9DA//rfDQCkA518+cjKGbHzC6/B
      5CmQjje/iJWxHjo6Oujo6GEhkkAt3MPpvfmMD47ibzzN3iKVVCzEQFcHQys2cjNzdHb3E05+
      /0mKs4Q9OwvFjQzhtYheoHeA6AUyl+gFEoQNIgBCVhMBELKa+S/IyCRZmp8hGEnhySuhpMCH
      IkEkMMvccgRnXgll+etzeMPQiQbmiFnzKPKtz9lioXmm51bQAGxutlduw2YRORZejel7zlhH
      C48HZ4nHIjxpu83YYhQtMsm1Gw9ZDgV5dP0q4xENQ0sx0X2Pv/3lP2gZWH7288M97UzMrxCP
      x4knU2yhc3jhLTB9BNjWcIIaux0JyLXcZSGwgjzYRdmJCxwscZKuaeerh2OUHiuCnFounta5
      Ffn+6kg8bdDQfIhSn1gNQnh9po8AdrsdDI2F0U4GFtJUV+QRjKiU5Kzv0EruNpyRZXSHh6qy
      4h+8HgmAeJDrX/6J3//f33Plfh+JjG72JghbyFs4B0gw1tlG34qdI8eOke+WmNzo7l9nYPyD
      Dv8jH/1PjmCgpda49cW3TNWWsyNPLIsivBrTR4C5wUeMpIr56NxRCjwqEhbyvUlmAykAMsvT
      xHwFL1kWJUMms/4gjGJ14neppHUxAgivzuQRYI2eR30kt+3i3p0lQKWqoZ7KAwfp/OtXXC3M
      JTgf5uSlA6QjS3R09xOcHWYyscq99Bx1TTvo+PoGmRw/Ni3GXMbNx16XuZsgbCkmt0JkCM4v
      Ek09XcxKwV9QgNdhIx4OEAjHsXtyyfc5ySTXWFoKkN44wMuKhbzCUpRMmEBwlYyhkFNQiEu1
      PJswiVYIc22FVgjRC/QOEAEwl+gFEoQNIgBCVhMBELKa6fcBtGSEvicPGZ6LUrpjH/vrK7BK
      MD/0iEcD8xTs2M/hXaUAGIbG3GA7QedO9pT71j/ASDPe9R2dY4vkVTdxqKEKm7K55s7Cu8P0
      EWC06zuS/p1cOH8GbbaD7rFlEnOPuTOQ5NDxIxhDLTyciaMlI3Tcu8qDRx0MzUef/fzQo9uM
      J/2cPfc+lXl20LfMObzwFpgegOp9p2jeVYbL5SbH5wE9zVjPHPXHmynMzefAmSbmO0fIyDaq
      Gk9w7tBOLM+ekI8zMbVKWYmfyGoEty8Hq+gEFV6D6XuPxWIBPU3//WuMJ7zUVuQQzTjId63v
      5bIrH2cmgmFV8Xvd/PDKYIjZ0SCjwwMMDfTw9TfXWY6lzN4EYQsx/RwgHQvysOU2eulBzjds
      wyKlsWhJYtrGN+hxkhnLS7qBLOSWVnD05Fm8FoPJh9cZX4pS4Mo1bwOELcX0VSHGuh5hqT7G
      8T1lWCQJsFJWYWV4YIF0Js1ibz9KdcVLeoFycbsDTM2toOsaoWgKh+1FKwgJwn+P6b1Aw91D
      zNmWGH4Iz16RVHcI9fK3/LEvicVVykcXi4hvvCIpEFxkIT1EfLyAkxc+oflQM7davqUjqeEr
      r+e9AtEJKrw60QrxDhCtEOYSrRCCsEEEQMhqIgBCVttyL1dZiyfRpdjbLuMnyWTSJNKb78m2
      dHrz1216AMILY7Q/7mA2GMdfupMTx/bis2TobL1J73QIT8kuzp3cj13WiUeC9Dy4RaTkFO81
      FEJinr9+foOoboBhEI1InPvsn9nudz77/OVQFGUtbfZmCZuU6QEIraxS3XyOMwUOuu9eY3B8
      mZ3KIGN6FZd+XcXMg8vcG6nm9Dadzq4uNE1jNb6xQ9uL+eSz3wKgawmuX75Kjs1m9iYIW4jp
      5wAVdfuoLPQg6RkSaQOX08LYQIzGgzU4bHZqjuwj3juC5srlyIn3aNpejPKjKg3CI/cxSg/j
      d265WZxgorfwiiSDWHCGG5e/xSjZw45SD2lFxfW0pVlxYVdSL35F0gYtEeLRYJIDewrEWbzw
      Wkw/fMaCU9x92Ef1/tPUFPuQpQwqCcIpgyIVSIVJYP8HO7ZBcHYcCqvItWyuG0fCu8fkA2iG
      oc5OyppPU1viR5YkwEJNnY/Otn7WknH67rbjaah9SS8QoMcYHphnx+4aE+sWtiqTWyGitHz+
      FWNrGdZnPBu9QCUehp+08HhokdyavZw5sIvkynovUCieImUouDw+Tl74hNzUGN2LFprryn+0
      bGIwGGRmaRXFqpq3ScKmtuV6gUQAhJ9iy11CyfW6sDud//U3vkMymQwWxcI/WBL1nZRJZ7BY
      N98u9Hzdm6/6/4LHZcfr3Vwt0qIb1FyiG1QQNpg+AhiGgaZl0HUDWVFQZAVJAl3LkNF0ZMWC
      ZePOl2EYGLqGjvz913SdjJbBMCQUiwVZln4wcwisRokktBf85neXruvIcvxtl/GTaZqGomzu
      uk0PwGxfGw/6Z8hoOpri5dS5s2xzxLn6xTcENRkNDx9eukieTSMw0cedm9fRdv+aT4+UAQb9
      97+hYyKCIhlY87dz4VQzrucei4zGkiiiFUj4bzI9AK7CGi7UHMSlKoy032FmJoAU70ZtOM+/
      7MwlMnqXu0+mubDHzXxM4cDeXTzRnx7jw4xPaZy/9Cl5No2Wy5dZjCaozhVLpAuvxvRzAH9+
      ES7VQioaYGY5RkGBm/l5qKr0o8gK3qrtKHOzGC4/e+p3k+txPLc0ihO/V2dmdoHg0ixhzYbX
      LprhhFdn/lUgQyc43snN9in2nnqPqgIby7IV9WkUZRsWWXtJL5CFgkIf/X3tTGFgz6vEYRGr
      QgivzvQRYHm8k/vjaT78p4/YXuBCQsFnj7MQXn9phh5eIGbPeXEy46N0Tjh4/6OL/PKXFylN
      zTCwGDa1fmFrMTkASYa6BskvLWJ1eZG5uUWiCZ2qxhqG77YyPD5Cy80+avbVQCrO0vws88ur
      RFeWmF9YJCHnYUtNMjw6yez0BMNLMXKcYgokvDqTWyESDDx8zGw0sfF/lZqmJirz3CxP9tE/
      vkxORR0NVQUkwgt0dvSytvE2JcXmoGH/UZypOXr7homkFarrGikv8DzrCRKtEMJPJXqBhKz2
      owBkMhkSicTLvv+dFg6HUe0OXK7N1QqRSqWw2qxIm6wZKJVKYrNtvoPN83X/6FxT13WSyaTp
      Rf0cMpkMbouCXX3p0wTvJAkdm8266XqBJHTUTfa3hh/W/aMA2Gw28vLyTC/q57DZdqCnRN3m
      er5u0QwnZDURgHeAxbI5u9K3Qt2bcwu2GFnenMehrVD35twCQfiZiAAIWU353e9+97u3XcTP
      JR6PI8syNptMd8tlbj3sQ/IWku91kAjOcPPGLRwlO3DbJCQM9NAYf/jiAfkVZbjVn3c2aBgG
      iZUJ2trHyS8txiaDYWQY77zLlVsPiKt5FOW6kIDo/BBffX2FqZBB6bZCrLJE370v6Q3ZqSzy
      IQFGJs6TO5cZWnVSVux9Q0cug7XAJHeuXeP+kz6UnDLyPTYwUnTc/obbjwax5hSR67GDoTHb
      /x2Xr94hrPgpzvMgaRlav/kjq65qCjy29bpjy1y/epOoLY8iv+ONVK2lY/Q+uMWNljYGJ5bw
      FZfiUS2kosu0Xr/M/d5ZCraV4bQpYKTpbb3Kzfs9GO7CrTgC6Ey2fsu0p4lPPjzG+L0rTMcM
      0msxdEuc/t4pDAMwNIYf95BUMkTjP/cTNBozfQ/4tq2buYkJkjpgGCz13acr5OWTX31MrPcm
      /QtrpCJzXL7dz3uXfsMO5zI3HgwAkIyGmByaYG3jNmU8vEwgssL81Apvbj3mVTofT7P79EX+
      7VcXGLl/mbnVBKMt37KU18wnFw4y2HKVubjBymgHDyZ1/ulfP0WeaKVjMoCh6+jGGgOdI6Q2
      6l6cHCOSjhFYjv7jX/0aNG0NW149v/7Xz7jQXMw3V+6AkeC7G7dwNZzl46Nl3Ll2h3BKY/rB
      NSbUXXzy0SmmWi9vwQCkY3QHbZxp3Ibdnc/xxjz6xkIAOHIq0aKTpDUDLRFmJONjp/dN/Akk
      8iv3cPHD0+So37drjy9G2NtQi91m58j+7YxMBogFpsipbcZns1Kxo55EeHH9m21+6gpjDM4m
      MTBYXRjHU1Lzo7WQfl5eDr93nFKfAyQZp9OFnA7TG3Zxqr4Uu7eIw7t9DE6uMrsUpK6+Drti
      Yf++OmZmA+sf4SqnxDbHwmoaMJgNhCgteLNv8bTZC9i5sxQFjWQacvxuiMyxqFazpywHR+FO
      anKTLC6t0BuQOdlYjt2Vw6n9RVswALqG7nBglwEkHDk56LGN5z/tbnL1FEvJNGvhAE5vPm9m
      dUUZu8uF9e/2Vl2WsNusgITq82IkUxipJDavF0kCxaaiSM8ejCB/ey0rI8NoeozpyRSVlTlv
      otgf1C3LBrHQPDe/vUru9gPkO2V0l/PZ39Pu92PEExiA6lhfWcHmdkNqo2sRhYLCPJYXl0EP
      sRq2k/uGpj7f01kYeMAf/s/vudY5w/6mPZBKIPl8WKWNuj1ujGQS3W7HLkus7xu5WzAAkoSW
      TKJvDMFaLIb29LqvZKV+p4uegQDB2UnyyqtNLU3XdDLa+gP7ejxORpYxZJl0Io4BGJkMaf37
      B/pVdylSao7V2RlCOaUUm9D5vTo7wK2Wx1QfvsC+2iIssowWT/K0Ki0WQ1Ms6LqOll6fOurJ
      JJnn9qSi4kLmZ+eJjPdjVNfjfuPPLMkU7TrMv/2Pzzi5I4e21nbSikImFn82Xcwk4uiKgpZM
      oW20v2mxtS0YAJuDWmucJzOrpJNRuvrnqan8vrXDUVaPfeYuXfNuqorNXdOm1OtgeHKetJam
      t3+CirI8HHmlRMcHiGc0lmYnsTu/f8OlbLFR5ZZpHZxhW1Hhmy9QC/P4yQT7Tp+jusC1/iiq
      6ma7EqZzNkw6EaZveInKshwK/F4mJqZJ6zpDg2MUF34/zbH6iyhNT3OlP0lDle+Nl52OBllY
      WQPZSkHpNuToKklvMXmrE4wH46SjC8wsa+QW5LLdnqJrOkQ6tUZHz8xWvBFmpe7YQa5e+ZY/
      JwwKtu/jQK5CPGnFbjNA9lLok4g5S3BLoDqcWH/8AoLXk47w4PYthheCBBZWmP3jn9h95BQH
      GvYyc/sOf+5pw7ttF2dLPThkJ7tLJ/niT3/A4i7g8KlTwHpdiqxQsXMb96+Nkn/YD6zgdr7B
      JV8iCwxPTjHz5Z/Xj4zuIn7x/il2H2vm2tWv6U9KFO9qpjpHQXLWM3PvDn/+98e4i2o5VVUA
      ko7d4USS7FRuz6OrRyHHqrBqtWP/ma+yPU9LR2i/dZ2VWArZ6qBi7wFcipfG5hJMgiUAAACG
      SURBVEparn3Ofc3G7iNnyHfayD18kBtXr/PnNp3cqsat9zzAZnxPsPD2bL0pkCD8BCIAQlYT
      ARCymgiAkNVEAISsJgIgZDURACGriQAIWU0EQMhqIgBCVhMBELKaCICQ1UQAhKwmAiBkNREA
      IauJAAhZTQRAyGoiAEJWEwEQspoIgJDV/j+tFJq4+4rI7AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
