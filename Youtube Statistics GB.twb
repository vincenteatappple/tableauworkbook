<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0615.1128                               -->
<workbook original-version='10.5' source-build='10.5.5 (10500.18.0615.1128)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='GBvideos (GBvideos)' inline='true' name='federated.1v60ick0psrnhw17yg10q1y30sl6' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GBvideos' name='excel-direct.1upg0x20et2xfx1g1e3lx0s8q7x1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/vincc/Desktop/Example workbook/Youtube Statistics/GBvideos.csv/GBvideos.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1upg0x20et2xfx1g1e3lx0s8q7x1' name='GBvideos' table='[GBvideos$]' type='table'>
          <columns gridOrigin='A1:P16384:no:A1:P16384:0' header='yes' outcome='2'>
            <column datatype='string' name='video_id' ordinal='0' />
            <column datatype='string' name='trending_date' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='channel_title' ordinal='3' />
            <column datatype='integer' name='category_id' ordinal='4' />
            <column datatype='string' name='publish_time' ordinal='5' />
            <column datatype='string' name='tags' ordinal='6' />
            <column datatype='integer' name='views' ordinal='7' />
            <column datatype='integer' name='likes' ordinal='8' />
            <column datatype='integer' name='dislikes' ordinal='9' />
            <column datatype='integer' name='comment_count' ordinal='10' />
            <column datatype='string' name='thumbnail_link' ordinal='11' />
            <column datatype='boolean' name='comments_disabled' ordinal='12' />
            <column datatype='boolean' name='ratings_disabled' ordinal='13' />
            <column datatype='boolean' name='video_error_or_removed' ordinal='14' />
            <column datatype='string' name='description' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>video_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[video_id]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>video_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trending_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[trending_date]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>trending_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>channel_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[channel_title]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>channel_title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>publish_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[publish_time]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>publish_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>views</remote-name>
            <remote-type>20</remote-type>
            <local-name>[views]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>views</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>likes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[likes]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>likes</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dislikes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dislikes]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>dislikes</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comment_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[comment_count]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>comment_count</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thumbnail_link</remote-name>
            <remote-type>130</remote-type>
            <local-name>[thumbnail_link]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>thumbnail_link</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comments_disabled</remote-name>
            <remote-type>11</remote-type>
            <local-name>[comments_disabled]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>comments_disabled</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratings_disabled</remote-name>
            <remote-type>11</remote-type>
            <local-name>[ratings_disabled]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>ratings_disabled</remote-alias>
            <ordinal>13</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>video_error_or_removed</remote-name>
            <remote-type>11</remote-type>
            <local-name>[video_error_or_removed]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>video_error_or_removed</remote-alias>
            <ordinal>14</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GBvideos]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P16384:no:A1:P16384:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' hidden='true' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([views]) / TOTAL(SUM([views]))'>
          <table-calc ordering-type='Table' />
        </calculation>
      </column>
      <column caption='Percentage of Likes and Dislikes' datatype='real' name='[Calculation_853713638442602497]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([dislikes])/SUM([dislikes]+[likes])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
      <column caption='Comment Count' datatype='integer' name='[comment_count]' role='measure' type='quantitative' />
      <column caption='Comments Disabled' datatype='boolean' name='[comments_disabled]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' hidden='true' name='[description]' role='dimension' type='nominal' />
      <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
      <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
      <column caption='Publish Year' datatype='string' name='[publish_time - Split 1 - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time - Split 1]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [publish_time - Split 1], &quot;-&quot;, 1 ) )' />
      </column>
      <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
      </column>
      <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
      <column caption='Ratings Disabled' datatype='boolean' name='[ratings_disabled]' role='dimension' type='nominal' />
      <column caption='Tags' datatype='string' hidden='true' name='[tags]' role='dimension' type='nominal' />
      <column caption='Thumbnail Link' datatype='string' hidden='true' name='[thumbnail_link]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Trending Date' datatype='string' name='[trending_date]' role='dimension' type='nominal' />
      <column caption='Video Error Or Removed' datatype='boolean' name='[video_error_or_removed]' role='dimension' type='nominal' />
      <column caption='Video Id' datatype='string' hidden='true' name='[video_id]' role='dimension' type='nominal' />
      <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
      <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[comment_count]' derivation='Sum' name='[sum:comment_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dislikes]' derivation='Sum' name='[sum:dislikes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.639321' measure-ordering='alphabetic' measure-percentage='0.360679' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category_id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>28</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#79706e'>
              <bucket>27</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>25</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>26</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>24</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>17</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>29</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>20</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>22</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:comment_count:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hong Kong&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='GB_category_id' inline='true' name='federated.0qqgh0r15n981u11nxjg91no77l1' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GB_category_id' name='semistructpassivestore-direct.1dh2k5p0j52roe1apg84y016rcw2'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/vincc/Desktop/Example workbook/Youtube Statistics' filename='GB_category_id.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[GB_category_id.json]'>
                  <map key='items' value='true' />
                  <map key='items.Value' value='true' />
                  <map key='items.Value.snippet' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1dh2k5p0j52roe1apg84y016rcw2' name='GB_category_id.json' table='[GB_category_id.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[GB_category_id.json].[Document Index (generated)]' />
          <map key='[assignable]' value='[GB_category_id.json].[items.Value.snippet.assignable]' />
          <map key='[channelId]' value='[GB_category_id.json].[items.Value.snippet.channelId]' />
          <map key='[etag (items)]' value='[GB_category_id.json].[items.Value.etag]' />
          <map key='[etag]' value='[GB_category_id.json].[etag]' />
          <map key='[id]' value='[GB_category_id.json].[items.Value.id]' />
          <map key='[items Index (generated)]' value='[GB_category_id.json].[items.Index (generated)]' />
          <map key='[kind (items)]' value='[GB_category_id.json].[items.Value.kind]' />
          <map key='[kind]' value='[GB_category_id.json].[kind]' />
          <map key='[title]' value='[GB_category_id.json].[items.Value.snippet.title]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>etag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[etag]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>etag</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[items Index (generated)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.etag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[etag (items)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.etag</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.kind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[kind (items)]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.kind</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.assignable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[assignable]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.assignable</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.channelId</remote-name>
            <remote-type>130</remote-type>
            <local-name>[channelId]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.channelId</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>items.Value.snippet.title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>items.Value.snippet.title</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[kind]</local-name>
            <parent-name>[GB_category_id.json]</parent-name>
            <remote-alias>kind</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' hidden='true' is-auto-gen-lod-field='true' name='[Number of Records per GB_category_id.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at GB_category_id.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' hidden='true' is-auto-gen-lod-field='true' name='[Number of Records per items]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([items Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at items level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Assignable' datatype='boolean' name='[assignable]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.assignable</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Channel Id' datatype='string' hidden='true' name='[channelId]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.channelId</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Etag (Items)' datatype='string' hidden='true' name='[etag (items)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.etag</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Etag' datatype='string' hidden='true' name='[etag]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>etag</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' hidden='true' name='[items Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>items.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Kind (Items)' datatype='string' hidden='true' name='[kind (items)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.kind</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Kind' datatype='string' hidden='true' name='[kind]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>kind</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.title</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <folder name='GB category id' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[etag]' type='field' />
        <folder-item name='[kind]' type='field' />
      </folder>
      <folder name='Items' role='dimensions'>
        <folder-item name='[etag (items)]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[items Index (generated)]' type='field' />
        <folder-item name='[kind (items)]' type='field' />
      </folder>
      <folder name='Snippet' role='dimensions'>
        <folder-item name='[assignable]' type='field' />
        <folder-item name='[channelId]' type='field' />
        <folder-item name='[title]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.592645' measure-ordering='alphabetic' measure-percentage='0.407355' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:title:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;News &amp; Politics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sports&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Autos &amp; Vehicles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Science &amp; Technology&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gaming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Travel &amp; Events&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Film &amp; Animation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;People &amp; Blogs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pets &amp; Animals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Howto &amp; Style&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hong Kong&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.id</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[id]' derivation='None' name='[none:id:nk]' pivot='key' type='nominal' />
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>items.Value.snippet.title</run>
          </formatted-text>
        </desc>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0qqgh0r15n981u11nxjg91no77l1' target='federated.1v60ick0psrnhw17yg10q1y30sl6'>
      <column-mapping>
        <map key='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]' value='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
        <map key='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' value='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Channel counts by Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
            <column-instance column='[channel_title]' derivation='Count' name='[cnt:channel_title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Comedy&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Entertainment&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Film &amp; Animation&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Gaming&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Howto &amp; Style&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Music&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;News &amp; Politics&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;People &amp; Blogs&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Science &amp; Technology&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Sports&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Music&quot;</bucket>
              <bucket>&quot;Entertainment&quot;</bucket>
              <bucket>&quot;People &amp; Blogs&quot;</bucket>
              <bucket>&quot;Howto &amp; Style&quot;</bucket>
              <bucket>&quot;Sports&quot;</bucket>
              <bucket>&quot;Gaming&quot;</bucket>
              <bucket>&quot;Comedy&quot;</bucket>
              <bucket>&quot;Film &amp; Animation&quot;</bucket>
              <bucket>&quot;News &amp; Politics&quot;</bucket>
              <bucket>&quot;Science &amp; Technology&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Pets &amp; Animals&quot;</bucket>
              <bucket>&quot;Autos &amp; Vehicles&quot;</bucket>
              <bucket>&quot;Travel &amp; Events&quot;</bucket>
              <bucket>&quot;Action/Adventure&quot;</bucket>
              <bucket>&quot;Anime/Animation&quot;</bucket>
              <bucket>&quot;Classics&quot;</bucket>
              <bucket>&quot;Documentary&quot;</bucket>
              <bucket>&quot;Drama&quot;</bucket>
              <bucket>&quot;Family&quot;</bucket>
              <bucket>&quot;Foreign&quot;</bucket>
              <bucket>&quot;Horror&quot;</bucket>
              <bucket>&quot;Movies&quot;</bucket>
              <bucket>&quot;Sci-Fi/Fantasy&quot;</bucket>
              <bucket>&quot;Short Movies&quot;</bucket>
              <bucket>&quot;Shorts&quot;</bucket>
              <bucket>&quot;Shows&quot;</bucket>
              <bucket>&quot;Thriller&quot;</bucket>
              <bucket>&quot;Trailers&quot;</bucket>
              <bucket>&quot;Videoblogging&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:category_id:ok]' member='1' />
              <groupfilter function='member' level='[none:category_id:ok]' member='10' />
              <groupfilter function='member' level='[none:category_id:ok]' member='17' />
              <groupfilter from='20' function='range' level='[none:category_id:ok]' to='28' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</column>
            <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1v60ick0psrnhw17yg10q1y30sl6].[cnt:channel_title:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[cnt:channel_title:qk]' />
              <text column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' />
              <color column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <join-lod-include-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[category_id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Measures by Category'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>##&#10;Conclusion: Videos in Music and Entertainment categories gain the most exposure to users on Youtube.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Comment Count' datatype='integer' name='[comment_count]' role='measure' type='quantitative' />
            <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[category_id]' derivation='None' name='[none:category_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[comment_count]' derivation='Sum' name='[sum:comment_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dislikes]' derivation='Sum' name='[sum:dislikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:title:nk]' />
              <groupfilter function='member' level='[none:title:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' direction='DESC' using='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f6eee3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:comment_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:comment_count:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk])))</rows>
        <cols>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</cols>
        <join-lod-exclude-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Percentage of Dislikes in Likes'>
      <table>
        <view>
          <datasources>
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column caption='Percentage of Likes and Dislikes' datatype='real' name='[Calculation_853713638442602497]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([dislikes])/SUM([dislikes]+[likes])' />
            </column>
            <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
            <column caption='Dislikes' datatype='integer' name='[dislikes]' role='measure' type='quantitative' />
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[dislikes]' derivation='Sum' name='[sum:dislikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_853713638442602497]' derivation='User' name='[usr:Calculation_853713638442602497:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Autos &amp; Vehicles&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Comedy&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Entertainment&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Film &amp; Animation&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Gaming&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Howto &amp; Style&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Music&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;News &amp; Politics&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;People &amp; Blogs&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Pets &amp; Animals&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Science &amp; Technology&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Sports&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Travel &amp; Events&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Entertainment&quot;</bucket>
              <bucket>&quot;News &amp; Politics&quot;</bucket>
              <bucket>&quot;People &amp; Blogs&quot;</bucket>
              <bucket>&quot;Film &amp; Animation&quot;</bucket>
              <bucket>&quot;Gaming&quot;</bucket>
              <bucket>&quot;Travel &amp; Events&quot;</bucket>
              <bucket>&quot;Sports&quot;</bucket>
              <bucket>&quot;Science &amp; Technology&quot;</bucket>
              <bucket>&quot;Music&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Comedy&quot;</bucket>
              <bucket>&quot;Howto &amp; Style&quot;</bucket>
              <bucket>&quot;Autos &amp; Vehicles&quot;</bucket>
              <bucket>&quot;Pets &amp; Animals&quot;</bucket>
              <bucket>&quot;Videoblogging&quot;</bucket>
              <bucket>&quot;Trailers&quot;</bucket>
              <bucket>&quot;Thriller&quot;</bucket>
              <bucket>&quot;Shows&quot;</bucket>
              <bucket>&quot;Shorts&quot;</bucket>
              <bucket>&quot;Short Movies&quot;</bucket>
              <bucket>&quot;Sci-Fi/Fantasy&quot;</bucket>
              <bucket>&quot;Movies&quot;</bucket>
              <bucket>&quot;Horror&quot;</bucket>
              <bucket>&quot;Foreign&quot;</bucket>
              <bucket>&quot;Family&quot;</bucket>
              <bucket>&quot;Drama&quot;</bucket>
              <bucket>&quot;Documentary&quot;</bucket>
              <bucket>&quot;Classics&quot;</bucket>
              <bucket>&quot;Anime/Animation&quot;</bucket>
              <bucket>&quot;Action/Adventure&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]' value='p0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e799b3' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#fabfd2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</rows>
        <cols>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:dislikes:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[usr:Calculation_853713638442602497:qk]))</cols>
        <join-lod-include-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[category_id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[title]</column>
        </join-lod-exclude-overrides>
        <percentages enabled='false' mode='column' />
      </table>
    </worksheet>
    <worksheet name='Top 20 videos (view)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
            <datasource caption='GB_category_id' name='federated.0qqgh0r15n981u11nxjg91no77l1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qqgh0r15n981u11nxjg91no77l1'>
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.id</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Category' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>items.Value.snippet.title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column-instance column='[channel_title]' derivation='Attribute' name='[attr:channel_title:nk]' pivot='key' type='nominal' />
            <column caption='Channel Title' datatype='string' name='[channel_title]' role='dimension' type='nominal' />
            <column-instance column='[publish_time - Split 1]' derivation='None' name='[none:publish_time - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
            </column>
            <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:channel_title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;YouTube Spotlight&quot;</bucket>
              <bucket>&quot;Ed Sheeran&quot;</bucket>
              <bucket>&quot;Marvel Entertainment&quot;</bucket>
              <bucket>&quot;Logan Paul Vlogs&quot;</bucket>
              <bucket>&quot;GEazyMusicVEVO&quot;</bucket>
              <bucket>&quot;Ozuna&quot;</bucket>
              <bucket>&quot;Bruno Mars&quot;</bucket>
              <bucket>&quot;TaylorSwiftVEVO&quot;</bucket>
              <bucket>&quot;PostMaloneVEVO&quot;</bucket>
              <bucket>&quot;Daddy Yankee&quot;</bucket>
              <bucket>&quot;jypentertainment&quot;</bucket>
              <bucket>&quot;ibighit&quot;</bucket>
              <bucket>&quot;jbalvinVEVO&quot;</bucket>
              <bucket>&quot;Pina Records&quot;</bucket>
              <bucket>&quot;EminemVEVO&quot;</bucket>
              <bucket>&quot;EnriqueIglesiasVEVO&quot;</bucket>
              <bucket>&quot;Universal Pictures&quot;</bucket>
              <bucket>&quot;Lele Pons&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2017-12-06T17:58:51&quot;</bucket>
              <bucket>&quot;2017-11-29T13:26:24&quot;</bucket>
              <bucket>&quot;2017-11-09T11:04:14&quot;</bucket>
              <bucket>&quot;2017-12-19T20:00:05&quot;</bucket>
              <bucket>&quot;2017-12-19T19:00:31&quot;</bucket>
              <bucket>&quot;2018-01-04T04:49:43&quot;</bucket>
              <bucket>&quot;2018-01-12T05:00:01&quot;</bucket>
              <bucket>&quot;2017-12-01T00:54:56&quot;</bucket>
              <bucket>&quot;2017-11-22T05:00:01&quot;</bucket>
              <bucket>&quot;2018-01-02T16:42:21&quot;</bucket>
              <bucket>&quot;2018-01-18T22:32:49&quot;</bucket>
              <bucket>&quot;2017-12-11T08:59:59&quot;</bucket>
              <bucket>&quot;2017-11-24T09:00:02&quot;</bucket>
              <bucket>&quot;2018-01-19T05:00:01&quot;</bucket>
              <bucket>&quot;2018-01-11T21:01:26&quot;</bucket>
              <bucket>&quot;2017-11-10T17:00:03&quot;</bucket>
              <bucket>&quot;2017-12-10T21:32:44&quot;</bucket>
              <bucket>&quot;2018-01-12T08:00:02&quot;</bucket>
              <bucket>&quot;2017-12-08T01:44:25&quot;</bucket>
              <bucket>&quot;2017-12-14T18:30:08&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Anitta &amp; J Balvin - Downtown (Official Lyric Video) ft. Lele Pons &amp; Juanpa Zurita&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Bruno Mars - Finesse (Remix) [Feat. Cardi B] [Official Video]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;BTS (ë°©íìëë¨) &apos;MIC Drop (Steve Aoki Remix)&apos; Official MV&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Dura - Daddy Yankee (Video Oficial)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ed Sheeran - Perfect (Official Music Video)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ed Sheeran - Perfect Duet (with BeyoncÃ©) [Official Audio]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Eminem - Walk On Water (Audio) ft. BeyoncÃ©&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Enrique Iglesias - EL BAÃO ft. Bad Bunny&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;G-Eazy - No Limit REMIX ft. A$AP Rocky, Cardi B, French Montana, Juicy J, Belly&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;J. Balvin, Jeon, Anitta - Machika&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Jurassic World: Fallen Kingdom - Official Trailer [HD]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Logan Paul - SANTA DISS TRACK (Official Music Video)&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Marvel Studios&apos; Avengers: Infinity War Official Trailer&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Natti Natasha â  Bad Bunny - Amantes de Una Noche ð©ð» ð¹ð°  [Official Video]&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Ozuna - La Modelo Ft Cardi B ( Video Oficial )&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Post Malone - rockstar ft. 21 Savage&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;So Sorry.&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;Taylor Swift - End Game ft. Ed Sheeran, Future&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;TWICE Heart Shaker M/V&quot;' />
              <groupfilter function='member' level='[none:title:nk]' member='&quot;YouTube Rewind: The Shape of 2017 | \#YouTubeRewind&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Anitta &amp; J Balvin - Downtown (Official Lyric Video) ft. Lele Pons &amp; Juanpa Zurita&quot;</bucket>
              <bucket>&quot;Jurassic World: Fallen Kingdom - Official Trailer [HD]&quot;</bucket>
              <bucket>&quot;Enrique Iglesias - EL BAÃO ft. Bad Bunny&quot;</bucket>
              <bucket>&quot;Logan Paul - SANTA DISS TRACK (Official Music Video)&quot;</bucket>
              <bucket>&quot;Eminem - Walk On Water (Audio) ft. BeyoncÃ©&quot;</bucket>
              <bucket>&quot;Natti Natasha â  Bad Bunny - Amantes de Una Noche ð©ð» ð¹ð°  [Official Video]&quot;</bucket>
              <bucket>&quot;J. Balvin, Jeon, Anitta - Machika&quot;</bucket>
              <bucket>&quot;BTS (ë°©íìëë¨) &apos;MIC Drop (Steve Aoki Remix)&apos; Official MV&quot;</bucket>
              <bucket>&quot;TWICE Heart Shaker M/V&quot;</bucket>
              <bucket>&quot;Dura - Daddy Yankee (Video Oficial)&quot;</bucket>
              <bucket>&quot;So Sorry.&quot;</bucket>
              <bucket>&quot;Post Malone - rockstar ft. 21 Savage&quot;</bucket>
              <bucket>&quot;Ed Sheeran - Perfect Duet (with BeyoncÃ©) [Official Audio]&quot;</bucket>
              <bucket>&quot;Taylor Swift - End Game ft. Ed Sheeran, Future&quot;</bucket>
              <bucket>&quot;Bruno Mars - Finesse (Remix) [Feat. Cardi B] [Official Video]&quot;</bucket>
              <bucket>&quot;Ozuna - La Modelo Ft Cardi B ( Video Oficial )&quot;</bucket>
              <bucket>&quot;G-Eazy - No Limit REMIX ft. A$AP Rocky, Cardi B, French Montana, Juicy J, Belly&quot;</bucket>
              <bucket>&quot;Ed Sheeran - Perfect (Official Music Video)&quot;</bucket>
              <bucket>&quot;Marvel Studios&apos; Avengers: Infinity War Official Trailer&quot;</bucket>
              <bucket>&quot;YouTube Rewind: The Shape of 2017 | \#YouTubeRewind&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='149' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:channel_title:nk] / ([federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk] / ([federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk] / [federated.0qqgh0r15n981u11nxjg91no77l1].[attr:title:nk])))</rows>
        <cols />
        <join-lod-include-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[id]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.0qqgh0r15n981u11nxjg91no77l1].[title]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Views and Likes across Publish Year'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Sum of Likes for each Publish Time.&#10;#Conclusion: Videos published at 17:58  06-12-17 has the most likes </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GBvideos (GBvideos)' name='federated.1v60ick0psrnhw17yg10q1y30sl6' />
          </datasources>
          <datasource-dependencies datasource='federated.1v60ick0psrnhw17yg10q1y30sl6'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Likes' datatype='integer' name='[likes]' role='measure' type='quantitative' />
            <column-instance column='[publish_time - Split 1 - Split 1]' derivation='None' name='[none:publish_time - Split 1 - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='Publish Year' datatype='string' name='[publish_time - Split 1 - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time - Split 1]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time - Split 1], &quot;-&quot;, 1 ) )' />
            </column>
            <column caption='Publish Date' datatype='string' name='[publish_time - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1v60ick0psrnhw17yg10q1y30sl6].[publish_time]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [publish_time], &quot;.&quot;, 1 ) )' />
            </column>
            <column caption='Publish Time' datatype='string' hidden='true' name='[publish_time]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[likes]' derivation='Sum' name='[sum:likes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[views]' derivation='Sum' name='[sum:views:qk]' pivot='key' type='quantitative' />
            <column caption='Views' datatype='integer' name='[views]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</rows>
        <cols>([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:likes:qk] + ([federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:views:qk] + [federated.1v60ick0psrnhw17yg10q1y30sl6].[sum:Number of Records:qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='58'>
    <window class='worksheet' name='Measures by Category'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='120'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:kind:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[:Measure Names]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Views and Likes across Publish Year'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='120'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Top 20 videos (view)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:channel_title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:trending_date:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[pcto:sum:views:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Channel counts by Category'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:id:nk]</field>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[attr:comments_disabled:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:channel_title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:comments_disabled:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:publish_time - Split 1 - Split 1:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:ratings_disabled:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Percentage of Dislikes in Likes'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qqgh0r15n981u11nxjg91no77l1].[none:title:nk]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:category_id:ok]</field>
            <field>[federated.1v60ick0psrnhw17yg10q1y30sl6].[none:ratings_disabled:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Channel counts by Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Measures by Category' width='192'>
      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
      OtJkAEhH2v8HC/a+szdNupAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage of Dislikes in Likes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 20 videos (view)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Views and Likes across Publish Year' width='192'>
      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
      AXoLXt3krjVJAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
